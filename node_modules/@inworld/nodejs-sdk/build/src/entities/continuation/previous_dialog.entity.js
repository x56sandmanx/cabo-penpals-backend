"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreviousDialog = exports.DialogTalker = exports.DialogParticipant = void 0;
const world_engine_pb_1 = require("../../../../proto/ai/inworld/engine/world-engine_pb");
var DialogParticipant;
(function (DialogParticipant) {
    DialogParticipant["UNKNOWN"] = "UNKNOWN";
    DialogParticipant["PLAYER"] = "PLAYER";
    DialogParticipant["CHARACTER"] = "CHARACTER";
})(DialogParticipant = exports.DialogParticipant || (exports.DialogParticipant = {}));
class DialogTalker {
    static toProto(talker) {
        switch (talker) {
            case DialogParticipant.PLAYER:
                return world_engine_pb_1.PreviousDialog.DialogParticipant.PLAYER;
            case DialogParticipant.CHARACTER:
                return world_engine_pb_1.PreviousDialog.DialogParticipant.CHARACTER;
            default:
                return world_engine_pb_1.PreviousDialog.DialogParticipant.UNKNOWN;
        }
    }
    static fromProto(talker) {
        switch (talker) {
            case world_engine_pb_1.PreviousDialog.DialogParticipant.PLAYER:
                return DialogParticipant.PLAYER;
            case world_engine_pb_1.PreviousDialog.DialogParticipant.CHARACTER:
                return DialogParticipant.CHARACTER;
            default:
                return DialogParticipant.UNKNOWN;
        }
    }
}
exports.DialogTalker = DialogTalker;
class PreviousDialog {
    constructor(phrases) {
        this.phrases = phrases;
    }
    toProto() {
        const phrases = this.phrases.map((item) => new world_engine_pb_1.PreviousDialog.Phrase()
            .setPhrase(item.phrase)
            .setTalker(DialogTalker.toProto(item.talker)));
        return new world_engine_pb_1.PreviousDialog().setPhrasesList(phrases);
    }
    static fromProto(dialog) {
        return new PreviousDialog(dialog.getPhrasesList().map((item) => ({
            talker: DialogTalker.fromProto(item.getTalker()),
            phrase: item.getPhrase(),
        })));
    }
}
exports.PreviousDialog = PreviousDialog;
