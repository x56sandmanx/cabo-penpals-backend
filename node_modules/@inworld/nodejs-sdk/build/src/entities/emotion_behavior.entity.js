"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmotionBehavior = exports.EmotionBehaviorCode = void 0;
const packets_pb_1 = require("../../../proto/ai/inworld/packets/packets_pb");
var EmotionBehaviorCode;
(function (EmotionBehaviorCode) {
    EmotionBehaviorCode["NEUTRAL"] = "NEUTRAL";
    EmotionBehaviorCode["DISGUST"] = "DISGUST";
    EmotionBehaviorCode["CONTEMPT"] = "CONTEMPT";
    EmotionBehaviorCode["BELLIGERENCE"] = "BELLIGERENCE";
    EmotionBehaviorCode["DOMINEERING"] = "DOMINEERING";
    EmotionBehaviorCode["CRITICISM"] = "CRITICISM";
    EmotionBehaviorCode["ANGER"] = "ANGER";
    EmotionBehaviorCode["TENSION"] = "TENSION";
    EmotionBehaviorCode["TENSE_HUMOR"] = "TENSE_HUMOR";
    EmotionBehaviorCode["DEFENSIVENESS"] = "DEFENSIVENESS";
    EmotionBehaviorCode["WHINING"] = "WHINING";
    EmotionBehaviorCode["SADNESS"] = "SADNESS";
    EmotionBehaviorCode["STONEWALLING"] = "STONEWALLING";
    EmotionBehaviorCode["INTEREST"] = "INTEREST";
    EmotionBehaviorCode["VALIDATION"] = "VALIDATION";
    EmotionBehaviorCode["AFFECTION"] = "AFFECTION";
    EmotionBehaviorCode["HUMOR"] = "HUMOR";
    EmotionBehaviorCode["SURPRISE"] = "SURPRISE";
    EmotionBehaviorCode["JOY"] = "JOY";
})(EmotionBehaviorCode = exports.EmotionBehaviorCode || (exports.EmotionBehaviorCode = {}));
class EmotionBehavior {
    constructor(behavior) {
        this.code = behavior;
    }
    static fromProto(code) {
        switch (code) {
            case packets_pb_1.EmotionEvent.SpaffCode.NEUTRAL:
                return EmotionBehaviorCode.NEUTRAL;
            case packets_pb_1.EmotionEvent.SpaffCode.DISGUST:
                return EmotionBehaviorCode.DISGUST;
            case packets_pb_1.EmotionEvent.SpaffCode.CONTEMPT:
                return EmotionBehaviorCode.CONTEMPT;
            case packets_pb_1.EmotionEvent.SpaffCode.BELLIGERENCE:
                return EmotionBehaviorCode.BELLIGERENCE;
            case packets_pb_1.EmotionEvent.SpaffCode.DOMINEERING:
                return EmotionBehaviorCode.DOMINEERING;
            case packets_pb_1.EmotionEvent.SpaffCode.CRITICISM:
                return EmotionBehaviorCode.CRITICISM;
            case packets_pb_1.EmotionEvent.SpaffCode.ANGER:
                return EmotionBehaviorCode.ANGER;
            case packets_pb_1.EmotionEvent.SpaffCode.TENSION:
                return EmotionBehaviorCode.TENSION;
            case packets_pb_1.EmotionEvent.SpaffCode.TENSE_HUMOR:
                return EmotionBehaviorCode.TENSE_HUMOR;
            case packets_pb_1.EmotionEvent.SpaffCode.DEFENSIVENESS:
                return EmotionBehaviorCode.DEFENSIVENESS;
            case packets_pb_1.EmotionEvent.SpaffCode.WHINING:
                return EmotionBehaviorCode.WHINING;
            case packets_pb_1.EmotionEvent.SpaffCode.SADNESS:
                return EmotionBehaviorCode.SADNESS;
            case packets_pb_1.EmotionEvent.SpaffCode.STONEWALLING:
                return EmotionBehaviorCode.STONEWALLING;
            case packets_pb_1.EmotionEvent.SpaffCode.INTEREST:
                return EmotionBehaviorCode.INTEREST;
            case packets_pb_1.EmotionEvent.SpaffCode.VALIDATION:
                return EmotionBehaviorCode.VALIDATION;
            case packets_pb_1.EmotionEvent.SpaffCode.AFFECTION:
                return EmotionBehaviorCode.AFFECTION;
            case packets_pb_1.EmotionEvent.SpaffCode.HUMOR:
                return EmotionBehaviorCode.HUMOR;
            case packets_pb_1.EmotionEvent.SpaffCode.SURPRISE:
                return EmotionBehaviorCode.SURPRISE;
            case packets_pb_1.EmotionEvent.SpaffCode.JOY:
                return EmotionBehaviorCode.JOY;
        }
    }
}
exports.EmotionBehavior = EmotionBehavior;
